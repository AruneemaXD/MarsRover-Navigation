{"version":3,"sources":["List.js","P5/Sketch.js","App.js","serviceWorker.js","index.js"],"names":["List","props","displayRadioValue","bind","clearObs","clearPath","this","onClearObs","onClearPath","ele","document","getElementsByName","i","length","checked","onChangeInput","value","alert","className","id","type","name","htmlFor","for","onClick","React","Component","Sketch","changeinco","bool","setState","clear_obs","changeincp","clear_path","changeina","algo","heu","selected_algo","selected_heu","algoinput","SketchA","p","heuristic","a","b","d","state","dist","j","abs","F","Math","SQRT2","max","aStar","winner","openSet","f","current","end","console","log","done","splice","closedSet","push","neighborlist","neighbors4sides","concat","neighbors4corners","neighbor","includes","wall","tempG","g","newPath","h","previous","temp","path","start","w","Spot","undefined","stop","show","col","fill","color","noStroke","rect","ellipse","addNeighbors","grid","cols","rows","Array","stops","sx","sy","draw","mouseDragged","disx","mouseX","disy","mouseY","window","oncontextmenu","mousePressed","mouseButton","RIGHT","filter","item","setStartandEnd","endx","endy","showgrid","clearobs","clearpath","showsets","setup","createCanvas","windowHeight","width","height","background","noFill","stroke","strokeWeight","beginShape","vertex","endShape","myRef","createRef","startx","starty","myP5","p5","inputRef","ref","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c74d58d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './List.css';\r\n\r\n\r\n\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.displayRadioValue = this.displayRadioValue.bind(this);\r\n        this.clearObs = this.clearObs.bind(this);\r\n        this.clearPath = this.clearPath.bind(this);\r\n     }\r\n\r\nclearObs() {\r\n    this.props.onClearObs(true);\r\n}\r\n\r\nclearPath() {\r\n    this.props.onClearPath(true);\r\n}\r\n\r\ndisplayRadioValue() { \r\n             \r\n            var ele = document.getElementsByName('level1'); \r\n              \r\n            for(var i = 0; i < ele.length; i++) { \r\n                  \r\n                if(ele[i].checked) { \r\n                        \r\n                        this.props.onChangeInput(ele[i].value[0],ele[i].value[1],true);\r\n                        alert(\"you\" + ele[i].value[0] + ele[i].value[1]);\r\n                } \r\n            } \r\n        } \r\n  render() \r\n    {\r\n  return ( \r\n    <form className='Form' id=\"algo_form\" >\r\n    <div id='buttons'>\r\n        <div>\r\n            <input type=\"radio\" name=\"level0\" value=\"A\" id=\"A\"/>\r\n            <label htmlFor=\"A\">A* Algo</label>\r\n            <div className=\"sub1\">\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"A0\" id=\"A0\"/>\r\n                    <label for=\"A0\">Euclidean</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"A1\" id=\"A1\"/>\r\n                    <label for=\"A1\">Manhattan</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"A2\" id=\"A2\"/>\r\n                    <label for=\"A2\">Octile</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"A3\" id=\"A3\"/>\r\n                    <label for=\"A3\">Chebyshev</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <input type=\"radio\" name=\"level0\" value=\"B\" id=\"B\"/>\r\n            <label for=\"B\">Best First Search</label>\r\n            <div className=\"sub1\">\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"B0\" id=\"B0\"/>\r\n                    <label for=\"B0\">Euclidean</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"B1\" id=\"B1\"/>\r\n                    <label for=\"B1\">Manhattan</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"B2\" id=\"B2\"/>\r\n                    <label for=\"B2\">Octile</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" name=\"level1\" value=\"B3\" id=\"B3\"/>\r\n                    <label for=\"B3\">Chebyshev</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div>\r\n            <input type=\"radio\" name=\"level1\" value=\"D0\" id=\"D\"/>\r\n            <label for=\"D\">Dijkstra</label>\r\n        </div> \r\n    </div>\r\n    <button type=\"button\" onClick={this.displayRadioValue}> Find Path </button>\r\n    <button type=\"button\" onClick={this.clearPath}> Clear Path </button>\r\n    <button type=\"button\" onClick={this.clearObs}> Clear All</button>\r\n    </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default List;\r\n\r\n\r\n","import React from 'react'\r\nimport p5 from 'p5'\r\nimport List from '../List'\r\nimport './Sketch.css';\r\n\r\n\r\n// Thanks to Daniel Shiffman of http://codingtra.in\r\n\r\nclass Sketch extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n\r\n      startx: 0,\r\n      starty: 0,\r\n      endx: 44,\r\n      endy: 29,\r\n      clear_obs: false,\r\n      clear_path: false,\r\n      selected_algo: \"Z\",\r\n      selected_heu: -1,\r\n      algoinput: false,\r\n\r\n    };\r\n\r\n  }\r\n  changeinco = (bool) => {\r\n    this.setState({\r\n      clear_obs: bool\r\n    });\r\n  }\r\n\r\n  changeincp = (bool) => {\r\n    this.setState({\r\n      clear_path: bool\r\n    });\r\n  }\r\n\r\n  changeina = (algo, heu, bool) => {\r\n    this.setState({\r\n      selected_algo: algo,\r\n      selected_heu: heu,\r\n      algoinput: bool\r\n    });\r\n  }\r\n\r\n  SketchA = (p) => {\r\n\r\n    // An educated guess of how far it is between two points\r\n    p.heuristic = (a, b) => {\r\n      var d;\r\n\r\n\r\n      if (this.state.selected_heu == 0)\r\n        d = p.dist(a.i, a.j, b.i, b.j);\r\n      if (this.state.selected_heu == 1)\r\n        d = p.abs(a.i - b.i) + p.abs(a.j - b.j);\r\n      if (this.state.selected_heu == 2) {\r\n        var F = Math.SQRT2 - 1;\r\n        d = (p.abs(a.i - b.i) < p.abs(a.j - b.j)) ? F * p.abs(a.i - b.i) + p.abs(a.j - b.j) : F * p.abs(a.j - b.j) + p.abs(a.i - b.i);\r\n      }\r\n\r\n      if (this.state.selected_heu == 3)\r\n        d = Math.max(p.abs(a.i - b.i), p.abs(a.j - b.j));\r\n\r\n      if (this.state.selected_algo == 'B')\r\n        d = d * 1000000;\r\n\r\n      if (this.state.selected_algo == 'D')\r\n        d = 0;\r\n\r\n\r\n      return d;\r\n    }\r\n\r\n    p.aStar = () => {\r\n\r\n      // Best next option\r\n\r\n      var winner = 0;\r\n      for (var i = 0; i < openSet.length; i++) {\r\n        if (openSet[i].f < openSet[winner].f) {\r\n          winner = i;\r\n        }\r\n      }\r\n      current = openSet[winner];\r\n\r\n      // Did I finish?\r\n      if (current === end) {\r\n        console.log('Sol')\r\n        done = true;\r\n\r\n\r\n      }\r\n\r\n      // Best option moves from openSet to closedSet\r\n      openSet.splice(winner, 1);\r\n      closedSet.push(current);\r\n\r\n      // Check all the neighbors\r\n      var neighborlist = current.neighbors4sides;\r\n      if (this.state.selected_heu != 1)\r\n        neighborlist = current.neighbors4sides.concat(current.neighbors4corners);\r\n      for (var i = 0; i < neighborlist.length; i++) {\r\n        var neighbor = neighborlist[i];\r\n\r\n        // Valid next spot?\r\n        if (!closedSet.includes(neighbor) && !neighbor.wall) {\r\n          var tempG = current.g + p.heuristic(neighbor, current);\r\n\r\n          // Is this a better path than before?\r\n          var newPath = false;\r\n          if (openSet.includes(neighbor)) {\r\n            if (tempG < neighbor.g) {\r\n              neighbor.g = tempG;\r\n              newPath = true;\r\n            }\r\n          } else {\r\n            neighbor.g = tempG;\r\n            newPath = true;\r\n            openSet.push(neighbor);\r\n          }\r\n\r\n          // Yes, it's a better path\r\n          if (newPath) {\r\n            neighbor.h = p.heuristic(neighbor, end);\r\n            neighbor.f = neighbor.g + neighbor.h;\r\n            neighbor.previous = current;\r\n          }\r\n        }\r\n      }\r\n      // Uh oh, no solution\r\n\r\n\r\n      // Find the path by working backwards shifted in algo\r\n      path = [];\r\n      var temp = current;\r\n      path.push(temp);\r\n      while (temp.previous) {\r\n        path.push(temp.previous);\r\n        temp = temp.previous;\r\n      }\r\n\r\n      // Drawing path as continuous line\r\n\r\n    }\r\n\r\n\r\n    class Spot {\r\n      constructor(i, j) {\r\n        // Location\r\n        this.i = i;\r\n        this.j = j;\r\n\r\n        // f, g, and h values for A*\r\n        this.f = 0;\r\n        this.g = 0;\r\n        this.h = 0;\r\n\r\n        // Neighbors\r\n        this.neighbors4sides = [];\r\n        this.neighbors4corners = [];\r\n\r\n        // Where did I come from?\r\n        this.previous = undefined;\r\n\r\n        // Am I a wall?\r\n        this.wall = false;\r\n        this.start = false\r\n        this.end = false;\r\n        this.stop = false;\r\n\r\n        // Display me\r\n        this.show = function (col) {\r\n\r\n\r\n          if (this.stop || this.start || this.end) {\r\n            p.fill(p.color(255, 199, 199));\r\n            p.noStroke();\r\n            p.rect(this.i * w, this.j * h, w, h);\r\n          } else {\r\n            if (this.wall) {\r\n              p.fill(0);\r\n              p.noStroke();\r\n              p.ellipse(this.i * w + w / 2, this.j * h + h / 2, w / 2, h / 2);\r\n              //p.rect(this.i * w, this.j * h, w, h);\r\n            } else if (col) {\r\n              p.fill(col);\r\n              p.noStroke();\r\n              p.rect(this.i * w, this.j * h, w, h);\r\n            }\r\n          }\r\n\r\n        };\r\n\r\n        // Figure out who my neighbors are\r\n        this.addNeighbors = function (grid) {\r\n          var i = this.i;\r\n          var j = this.j;\r\n          if (i < cols - 1) {\r\n            this.neighbors4sides.push(grid[i + 1][j]);\r\n          }\r\n          if (i > 0) {\r\n            this.neighbors4sides.push(grid[i - 1][j]);\r\n          }\r\n          if (j < rows - 1) {\r\n            this.neighbors4sides.push(grid[i][j + 1]);\r\n          }\r\n          if (j > 0) {\r\n            this.neighbors4sides.push(grid[i][j - 1]);\r\n          }\r\n          if (i > 0 && j > 0) {\r\n            this.neighbors4corners.push(grid[i - 1][j - 1]);\r\n          }\r\n          if (i < cols - 1 && j > 0) {\r\n            this.neighbors4corners.push(grid[i + 1][j - 1]);\r\n          }\r\n          if (i > 0 && j < rows - 1) {\r\n            this.neighbors4corners.push(grid[i - 1][j + 1]);\r\n          }\r\n          if (i < cols - 1 && j < rows - 1) {\r\n            this.neighbors4corners.push(grid[i + 1][j + 1]);\r\n          }\r\n        };\r\n\r\n\r\n      }\r\n    }\r\n\r\n    // How many columns and rows?\r\n    var cols = 45;\r\n    var rows = 30;\r\n\r\n    // This will be the 2D array\r\n    var grid = new Array(cols);\r\n\r\n    // Open and closed set\r\n    var openSet = [];\r\n    var closedSet = [];\r\n    var current;\r\n    var stops = [];\r\n\r\n\r\n    // Start and end\r\n    var start;\r\n    var sx = 0,\r\n      sy = 0;\r\n    var ex = cols - 1;\r\n    var ey = rows - 1;\r\n    var end;\r\n\r\n    p.sx = sx;\r\n    p.sy = sy;\r\n\r\n    // Width and height of each cell of grid\r\n    var w, h;\r\n\r\n    // The road taken\r\n    var path = [];\r\n    var done = false;\r\n\r\n\r\n    var draw = 0;\r\n\r\n\r\n    p.mouseDragged = () => {\r\n      for (var j = 0; j < rows; j++) {\r\n        for (var i = 0; i < cols; i++) {\r\n          var disx = p.abs(p.mouseX - (i * w + w / 2));\r\n          var disy = p.abs(p.mouseY - (j * h + h / 2));\r\n          if (disx < w / 2 && disy < h / 2) {\r\n\r\n            grid[i][j].wall = true\r\n          };\r\n        }\r\n      }\r\n    }\r\n    window.oncontextmenu = function () {\r\n      return false;\r\n    }\r\n    p.mousePressed = () => {\r\n\r\n      if (p.mouseButton === p.RIGHT) {\r\n        for (var j = 0; j < rows; j++) {\r\n          for (var i = 0; i < cols; i++) {\r\n            var disx = p.abs(p.mouseX - (i * w + w / 2));\r\n            var disy = p.abs(p.mouseY - (j * h + h / 2));\r\n            if (disx < w / 2 && disy < w / 2) {\r\n              if (grid[i][j].wall)\r\n                return;\r\n              if (grid[i][j].stop)\r\n                stops = stops.filter(item => item !== grid[i][j]);\r\n              else\r\n                stops.push(grid[i][j]);\r\n              grid[i][j].stop = !grid[i][j].stop;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for (var j = 0; j < rows; j++) {\r\n          for (var i = 0; i < cols; i++) {\r\n            var disx = p.abs(p.mouseX - (i * w + w / 2));\r\n            var disy = p.abs(p.mouseY - (j * h + h / 2));\r\n            if (disx < w / 2 && disy < w / 2) {\r\n              if (grid[i][j].stop)\r\n                return;\r\n\r\n              grid[i][j].wall = !grid[i][j].wall;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    p.setStartandEnd = () => {\r\n      // Start and end\r\n\r\n      start = grid[p.sx][p.sy];\r\n      end = grid[this.state.endx][this.state.endy];\r\n      start.wall = false;\r\n      end.wall = false;\r\n      start.start = true;\r\n      end.end = true;\r\n\r\n      // openSet starts with beginning only\r\n      openSet.push(start);\r\n    }\r\n\r\n    p.showgrid = () => {\r\n      for (var i = 0; i < cols; i++) {\r\n        for (var j = 0; j < rows; j++) {\r\n          grid[i][j].show();\r\n        }\r\n      }\r\n    }\r\n\r\n    p.clearobs = () => {\r\n      for (var i = 0; i < cols; i++) {\r\n        for (var j = 0; j < rows; j++) {\r\n          grid[i][j].wall = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    p.clearpath = () => {\r\n      openSet.splice(0, openSet.length);\r\n      closedSet.splice(0, closedSet.length);\r\n      path.splice(0, path.length);\r\n      p.setStartandEnd();\r\n      done = false;\r\n      this.state.algoinput = false;\r\n    }\r\n\r\n    p.showsets = () => {\r\n      for (var i = 0; i < closedSet.length; i++) {\r\n        closedSet[i].show(p.color(127, 219, 218, 80));\r\n      }\r\n\r\n      for (var i = 0; i < openSet.length; i++) {\r\n        openSet[i].show(p.color(0, 255, 0, 80));\r\n      }\r\n    }\r\n\r\n    p.setup = () => {\r\n      p.createCanvas(p.windowHeight * 1.5, p.windowHeight);\r\n      console.log('A*');\r\n      // Grid cell size\r\n      w = p.width / cols;\r\n      h = p.height / rows;\r\n\r\n      // Making a 2D array\r\n      for (var i = 0; i < cols; i++) {\r\n        grid[i] = new Array(rows);\r\n      }\r\n\r\n      for (var i = 0; i < cols; i++) {\r\n        for (var j = 0; j < rows; j++) {\r\n          grid[i][j] = new Spot(i, j);\r\n        }\r\n      }\r\n\r\n      // All the neighbors\r\n      for (var i = 0; i < cols; i++) {\r\n        for (var j = 0; j < rows; j++) {\r\n          grid[i][j].addNeighbors(grid);\r\n        }\r\n      }\r\n\r\n      p.setStartandEnd();\r\n    }\r\n\r\n\r\n    p.draw = () => {\r\n\r\n      p.background(255);\r\n      //Check if URL param level0 and level 1 are set\r\n      //If those are null then altern( elect algo and return;)\r\n\r\n      console.log(draw++)\r\n\r\n\r\n      // Am I still searching?\r\n\r\n      if (this.state.selected_algo == 'A' || this.state.selected_algo == 'B' || this.state.selected_algo == 'D') {\r\n        if (openSet.length > 0 && this.state.algoinput == true)\r\n          if (!done) {\r\n            p.aStar()\r\n          }\r\n        else {\r\n\r\n          //p.noLoop();\r\n          done = true;\r\n          console.log('NO PATH!');\r\n          //return;\r\n\r\n        }\r\n      }\r\n\r\n\r\n      // Draw current state of everything\r\n\r\n      // Draw white box or obstacles\r\n      p.showgrid();\r\n\r\n      if (this.state.clear_obs) {\r\n        p.clearobs();\r\n        p.clearpath();\r\n        this.setState({\r\n          clear_obs: false\r\n        });\r\n      }\r\n\r\n      if (this.state.clear_path) {\r\n        p.clearpath();\r\n        this.setState({\r\n          clear_path: false\r\n        });\r\n      }\r\n\r\n\r\n      // Draw pink & green sets\r\n      p.showsets();\r\n\r\n      // Find the path by working backwards shifted in algo\r\n\r\n      // Drawing path as continuous line\r\n      p.noFill();\r\n      p.stroke(p.color(86, 35, 73));\r\n      p.strokeWeight(w / 3);\r\n      p.beginShape();\r\n      for (var i = 0; i < path.length; i++) {\r\n        p.vertex(path[i].i * w + w / 2, path[i].j * h + h / 2);\r\n      }\r\n      p.endShape();\r\n\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //We create a new p5 object on component mount, feed it\r\n    this.myP5 = new p5(this.SketchA, this.myRef.current);\r\n  }\r\n\r\n  render() {\r\n    this.inputRef = React.createRef();\r\n    return (\r\n      //This div will contain our p5 sketch\r\n      <div className = \"Sketch\">\r\n      <div ref = {this.myRef}> </div> \r\n      <div> <List onChangeInput = {this.changeina} onClearObs = {this.changeinco} onClearPath = {this.changeincp}/> </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Sketch","import React from 'react';\nimport Sketch from './P5/Sketch'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sketch />   \n    </div>\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}